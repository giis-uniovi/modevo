module MergeTable;
create OUT: DataMigration from LM:Schema, CM:ConceptualModel, CH:SchemaEvolution;

---Rule for joining two tables
rule mergeTable {
	from
		j: SchemaEvolution!MergeTable 	
		using{
			tableTarget: Schema!Table = Schema!Table.allInstancesFrom('LM') --Main table to get the data is the previous version
			->any (t | t.name = j.tableTarget);
			tableSource: Schema!Table = Schema!Table.allInstancesFrom('LM') --Main table to get the data is the previous version
			->any (t | t.name = j.tableSource);
			columnsInBothTablesTarget: Sequence (SchemaEvolution!Column) = tableTarget.Column
			-> select (sc | (sc.equivalentColumnInSequenceTables(tableSource.Column)));
			columnsInOnlySourceTable: Sequence (SchemaEvolution!Column) = tableSource.Column
			-> select (sc | (not sc.equivalentColumnInSequenceTables(tableTarget.Column)));
		}
	to
		d: DataMigration!MigrationTable(
			name<- j.tableTarget,
			migcol <- columnsInOnlySourceTable -> collect (c | thisModule.columnMigColMerge(c, columnsInBothTablesTarget, tableTarget, j))
		)
}

---Details migration for a single column that has been added to a new table
lazy rule columnMigColMerge {
	from
		column: Schema!Column,
		colPotentialKey: Sequence (Schema!Column),
		tableTarget: Schema!Table,
		j: SchemaEvolution!MergeTable 	
		
		using {
			keyColumnToColumn : Sequence (Schema!Column) = thisModule.typeKey (colPotentialKey, thisModule.extractEntityByName (column.nameEntity), tableTarget);
		}
	to
		add: DataMigration!MigrationCol ( --for each new column
			MigrateTo <-  thisModule.columnToMergeTable (keyColumnToColumn, column, j),
			MigrateFrom <- thisModule.columnFrom (keyColumnToColumn, column)
		)	
}

---Details the migration to a target column. This is rule is triggered when there is a new column added to an existing table
lazy rule columnToMergeTable {
from	
		keysColumnFrom: Sequence (Schema!Column),
		r: Schema!Column,
		j: SchemaEvolution!MergeTable 	
	to
		MigrateFrom: DataMigration!Target (
			Data<- r.name,
			DataTable <- r.tableColumn.name,
			Key <- thisModule.getNamesColumn(keysColumnFrom),
			NewTableName <- j.newTableName
		)
}
